<h3>RealTimeTableDashboard</h3>

@page "/realtimedashboard"
@using Microsoft.AspNetCore.SignalR.Client

<h1>@IsConnected</h1>

<table border="1">
    <tr>
        <th>Id</th>
        <th>Details</th>
    </tr>
    @foreach (var message in messages)
    {
        <tr>
            <td>@message.Id</td>
            <td>@message.Details</td>
        </tr>
    }
</table>

@code {
    private HubConnection hubConnection; //for connecting to SignalR
    private readonly string functionAppBaseUri = "http://localhost:7071/api/"; //URL for function app. Leave this as is for now.

    public List<DashboardMessage> messages = new List<DashboardMessage>();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(functionAppBaseUri)
            .Build();

        Connect();

        await hubConnection.StartAsync(); //start connection!


    }

    private void Connect()
    {
        hubConnection.On<DashboardMessage>("dashboardMessage", (clientMessage) =>
        {
            Console.Write("11");
            if (messages != null)
            {
                var data = (from m in messages
                            where m.Id == clientMessage.Id
                            select m).FirstOrDefault();

                if (data == null)
                {
                    messages.Add(clientMessage);
                }
                else
                {
                    data.Id = clientMessage.Id;
                    data.Details = clientMessage.Details;

                }
            }
            else
            {
                messages?.Add(clientMessage);
            }
        });


        StateHasChanged(); //This tells Blazor that the UI needs to be updated
    }


    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

}



